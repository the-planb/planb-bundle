parameters:
services:
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  PlanB\Domain\:
    resource: '../../../../src/Domain'

  PlanB\UseCase\:
    resource: '../../../../src/UseCase'

  PlanB\Framework\:
    resource: '../../../../src/Framework'

  # serializer
  planb.serializer.normalizer.carbon:
    class: PlanB\Framework\Api\Normalizer\CarbonNormalizer
    tags:
      - { name: serializer.normalizer, priority: 0 }

  serializer.normalizer.datetime:
    class: Symfony\Component\Serializer\Normalizer\DateTimeNormalizer
    arguments:
      - !php/const \Symfony\Component\Serializer\Normalizer\DateTimeNormalizer::FORMAT_KEY: 'Y-m-d H:i:s'
    tags:
      - { name: serializer.normalizer, priority: -900 }

  api_platform.http_cache.listener.response.configure:
    class: PlanB\Framework\Api\Symfony\EventListener\AddHeadersListener
    arguments:
      $etag: '%api_platform.http_cache.etag%'
      $maxAge: '%api_platform.http_cache.max_age%'
      $sharedMaxAge: '%api_platform.http_cache.shared_max_age%'
      $vary: '%api_platform.http_cache.vary%'
      $public: '%api_platform.http_cache.public%'
      $resourceMetadataCollectionFactory: '@api_platform.metadata.resource.metadata_collection_factory'
    tags:
      - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse, priority: -1 }

  #  filters
  planb.doctrine.orm.text_filter:
    class: PlanB\Framework\Api\Filter\TextFilter
    arguments:
      $managerRegistry: '@doctrine'
      $logger: '@?logger'
      $properties: ~
      $nameConverter: '@?api_platform.name_converter'

    tags: [ 'api_platform.filter' ]